<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:Mobsub.RainCurtain.ViewModels"
        xmlns:converter="clr-namespace:Mobsub.RainCurtain.ViewModels.Converter"
        xmlns:ass="clr-namespace:Mobsub.SubtitleParse.AssTypes;assembly=SubtitleParse"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="Mobsub.RainCurtain.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        x:CompileBindings="True"
        Width="2560" Height="1440"
        Title="RainCurtain">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Window.Resources>
        <converter:AssTimeConverter x:Key="AssTimeConverter"/>
        <converter:InvalidValueColorConverter x:Key="InvalidValueColorConverter"/>
        <converter:CommentLineConverter x:Key="CommentLineConverter"/>
        <converter:HideZeroConverter x:Key="HideZeroConverter"/>
        <converter:CharactersPerSecondConverter x:Key="CharactersPerSecondConverter"/>
        <converter:StartFromOneConverter x:Key="StartFromOneConverter"/>
    </Window.Resources>
    
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_Open..." Command="{Binding OpenFileCommand}"/>
                <Separator/>
                <MenuItem Header="_Exit"/>
            </MenuItem>
            <MenuItem Header="_Edit">
            </MenuItem>
            <MenuItem Header="_Subtitle">
            </MenuItem>
            <MenuItem Header="_Timing">
            </MenuItem>
            <MenuItem Header="_Video">
            </MenuItem>
            <MenuItem Header="_Audio">
            </MenuItem>
            <MenuItem Header="_Automation">
            </MenuItem>
            <MenuItem Header="_View">
            </MenuItem>
            <MenuItem Header="_Font">
            </MenuItem>
            <MenuItem Header="_Help">
            </MenuItem>
        </Menu>
        <Border BorderThickness="0,1,0,0" BorderBrush="Aqua">
            <Grid RowDefinitions="30,30, 1*, 1, 4*" ShowGridLines="True">
                <CheckBox Grid.Row="0" Grid.Column="0" Margin="10,0,0,0" Content="_Comment" IsChecked="{Binding !SelectedEvent.IsDialogue, FallbackValue=false}"
                          Command="{Binding CommentSelectedCommand}" CommandParameter="{Binding ElementName=SubtitleEvents, Path=SelectedItems}"/>
                <TextBox Grid.Row="2" Margin="2,2,2,2" Text="{Binding SelectedEvent.Text, Mode=TwoWay, FallbackValue=''}"/>
                <GridSplitter Grid.Row="3" ResizeDirection="Rows"/>
                <DataGrid Name="SubtitleEvents" Grid.Row="4" Margin="20" ItemsSource="{Binding AssEvents, Mode=TwoWay}"
                          SelectedItem="{Binding SelectedEvent, Mode=TwoWay}"
                          IsReadOnly="True"
                          CanUserReorderColumns="False"
                          CanUserResizeColumns="False"
                          CanUserSortColumns="False"
                          GridLinesVisibility="All"
                          HeadersVisibility="All"
                          BorderThickness="1" BorderBrush="Gray">
                    <DataGrid.Styles>
                        <Style Selector="DataGridRow" x:DataType="ass:AssEvent">
                            <Setter Property="Header" Value="{Binding $self.Index, Converter={StaticResource StartFromOneConverter}}"/>
                            <Setter Property="Background" Value="{Binding IsDialogue, Converter={StaticResource CommentLineConverter}}"></Setter>
                        </Style>
                        <!-- <Style Selector="DataGridCell" x:DataType="ass:AssEvent"> -->
                        <!--     <Setter Property="Background" Value="{Binding IsDialogue, Converter={StaticResource CommentLineConverter}}"/> -->
                        <!-- </Style> -->
                    </DataGrid.Styles>
                    
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="L" Binding="{Binding Layer, Converter={StaticResource HideZeroConverter}}" IsVisible="{Binding LayerIsVisible}"/>
                        <DataGridTextColumn Header="Start" Binding="{Binding Start, Converter={StaticResource AssTimeConverter}, ConverterParameter=ctsRounding}"/>
                        <DataGridTemplateColumn Header="End">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding End,
                                                Converter={StaticResource AssTimeConverter}, ConverterParameter=ctsRounding
                                                }"
                                               Padding="12, 6,12,0">
                                        <TextBlock.Background>
                                            <MultiBinding Converter="{StaticResource InvalidValueColorConverter}">
                                                <Binding Path="Start"></Binding>
                                                <Binding Path="End"></Binding>
                                            </MultiBinding>
                                        </TextBlock.Background>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="CPS">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock.Text>
                                            <MultiBinding Converter="{StaticResource CharactersPerSecondConverter}">
                                                <Binding Path="IsDialogue"></Binding>
                                                <Binding Path="Start"></Binding>
                                                <Binding Path="End"></Binding>
                                                <Binding Path="Text"></Binding>
                                            </MultiBinding>
                                        </TextBlock.Text>
                                    </TextBlock>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Style" Binding="{Binding Style}" />
                        <DataGridTextColumn Header="Actor" Binding="{Binding Name}" IsVisible="{Binding ActorNameIsVisible}"/>
                        <DataGridTextColumn Header="MarginL" Binding="{Binding MarginL, Converter={StaticResource HideZeroConverter}}" IsVisible="{Binding MarginLIsVisible}"/>
                        <DataGridTextColumn Header="MarginR" Binding="{Binding MarginR, Converter={StaticResource HideZeroConverter}}" IsVisible="{Binding MarginRIsVisible}"/>
                        <DataGridTextColumn Header="MarginV" Binding="{Binding MarginV, Converter={StaticResource HideZeroConverter}}" IsVisible="{Binding MarginVIsVisible}"/>
                        <DataGridTextColumn Header="Effect" Binding="{Binding Effect}" IsVisible="{Binding EffectIsVisible}"/>
                        <DataGridTextColumn Header="Text" Width="*" Binding="{Binding Text}" />
                    </DataGrid.Columns>
                
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Copy"/>
                            <MenuItem Header="Paste"/>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                </DataGrid>
            </Grid>
        </Border>
        
        
        <!-- <Border BorderBrush="Black" BorderThickness="2" Margin="20" Height="20" DockPanel.Dock="Top" -->
        <!--         Background="LightGray" -->
        <!--         HorizontalAlignment="Stretch" VerticalAlignment="Top" -->
        <!--         DragDrop.AllowDrop="True" /> -->
        <!--     ~1~ <TextBlock x:Name="DropHint" @1@ -->
        <!--     ~1~            HorizontalAlignment="Center" @1@ -->
        <!--     ~1~            VerticalAlignment="Center" @1@ -->
        <!--     ~1~            Text="Drag files here!" /> @1@ -->
        <!-- <TextBlock Name="FpsLabel" DockPanel.Dock="Left" Background="Chartreuse" Margin="20,0,0,0" Width="80" Height="100"/> -->
        <!-- ~1~ <SKCanvasControl Name="CanvasControl" Margin="20" Width="1920" Height="1080" /> @1@ -->
        <!-- <Image Name="Image" Margin="20" Width="1920" Height="1080"></Image> -->
    </DockPanel>

</Window>
